{"version":3,"sources":["components/Header/index.js","components/Main/Cards/index.js","components/Main/index.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Cards","useState","cards","setCards","liked","setLiked","useEffect","fetch","then","response","ok","Error","status","json","data","get","catch","error","console","map","id","attributes","title","relationships","street","house","room","preview_image","alt","fill","find","item","style","minHeight","src","onClick","index","findIndex","arr","filter","setLike","width","height","xmlns","stroke","d","Main","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iOAEe,SAASA,IACpB,OACI,iCACI,oBAAIC,UAAW,kBAAf,+F,+BCAG,SAASC,IAAQ,IAAD,EAEDC,mBAAS,IAFR,mBAEpBC,EAFoB,KAEbC,EAFa,OAGDF,mBAAS,IAHR,mBAGpBG,EAHoB,KAGbC,EAHa,KA2B3B,OAdAC,qBAAU,WACNC,MAAM,0DACLC,MAAK,SAAAC,GACF,IAAKA,EAASC,GACV,MAAM,IAAIC,MAAM,cAAgBF,EAASG,QAE7C,OAAOH,EAASI,UAEnBL,MAAK,SAAAM,GACFA,GAAQX,EAASY,cAAID,EAAM,gBAE9BE,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAM,uBAAwBA,QACvD,IAGC,qBAAKlB,UAAW,iBAAhB,SACI,qBAAKA,UAAU,8BAAf,SACKG,GAASA,EAAMiB,KAAI,YAAuC,IAApCC,EAAmC,EAAnCA,GAAIC,EAA+B,EAA/BA,WACjBC,GADgD,EAAnBC,cACrBR,cAAIM,EAAY,QAAS,KACjCG,EAAST,cAAIM,EAAY,iBAAkB,IAC3CI,EAAQV,cAAIM,EAAY,gBAAiB,IACzCK,EAAOX,cAAIM,EAAY,eAAgB,IACvCM,EAAgBZ,cAAIM,EAAY,oBAAqB,IACrDO,EAAMb,cAAIM,EAAY,oBAAqB,IAC3CQ,EAAOzB,EAAM0B,MAAK,SAAAC,GAAI,OAAIA,IAASX,OAAQA,EAApC,aAEb,OACI,qBAAKrB,UAAU,uBAAf,SACI,sBACIA,UAAU,OACViC,MAAO,CACHC,UAAW,SAHnB,UAMI,qBAAKC,IAAKP,EAAe5B,UAAU,eAAe6B,IAAKA,IACvD,sBAAK7B,UAAU,uFAAf,UACI,oBACIA,UAAU,aACViC,MAAO,CACHC,UAAW,QAHnB,SAMKX,IAEL,oBACIvB,UAAU,YACViC,MAAO,CACHC,UAAW,QAHnB,0DAMeT,EANf,uBAM4BC,EAN5B,kBAMwCC,KAEzC,qBACI3B,UAAW,aACXoC,QAAS,kBA9D5C,SAAiBf,GACb,IAAMgB,EAAQhC,EAAMiC,WAAW,SAAAN,GAAI,OAAIA,IAASX,KAE1CkB,EAAMlC,EAAMmC,QAAO,SAAAR,GAAI,OAAIA,IAASX,KAE9Bf,EAAZ+B,EAAQ,EAAa,GAAD,mBAAKhC,GAAL,CAAYgB,IAAgBkB,GAyDFE,CAAQpB,IAF3B,SAII,qBAAKqB,MAAM,KAAKC,OAAO,KAAKC,MAAM,6BAAlC,SACI,8BACI,4CACA,sBAAMvB,GAAG,QAAQS,KAAMA,EAAMe,OAAO,MAAMC,EAAE,yKAhCxBzB,UC1CpD,SAAS0B,IAEpB,OACI,sBAAM/C,UAAW,YAAjB,SACI,cAAC,EAAD,MCHG,SAASgD,IACpB,OACI,qCACI,cAACjD,EAAD,IACA,cAACgD,EAAD,OCRZ,IAYeE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB1C,MAAK,YAAkD,IAA/C2C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCEdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACX,EAAD,MAEFY,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ed785502.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function Header(){\n    return (\n        <header>\n            <h1 className={\"text-center p-4\"}>\n                Список квартир\n            </h1>\n        </header>\n    )\n};\n","import React, { useState, useEffect } from 'react';\nimport { get } from \"lodash\";\n\nimport \"./Cards.css\";\n\nexport default function Cards(){\n\n    const [cards, setCards] = useState([]);\n    const [liked, setLiked] = useState([]);\n\n    function setLike(id){\n        const index = liked.findIndex (item => item === id)\n\n        const arr = liked.filter(item => item !== id);\n\n        index < 0 ? setLiked([...liked, id]) : setLiked(arr);\n    }\n\n    useEffect(() => {\n        fetch(`https://alinagaripova.github.io/json-api/entities.json`)\n        .then(response => {\n            if (!response.ok) {\n                throw new Error(\"HTTP error \" + response.status);\n            }\n            return response.json();\n        })\n        .then(data => {\n            data && setCards(get(data, \"response\"))\n        })\n        .catch(error => console.error(\"entities.json loader\", error));\n    }, [])\n\n    return (\n        <div className={\"container py-3\"}>\n            <div className=\"row justify-content-between\">\n                {cards && cards.map(({ id, attributes, relationships })=> {\n                    const title = get(attributes, \"title\", \"\");\n                    const street = get(attributes, \"address.street\", \"\");\n                    const house = get(attributes, \"address.house\", \"\");\n                    const room = get(attributes, \"address.room\", \"\");\n                    const preview_image = get(attributes, \"preview_image.src\", \"\");\n                    const alt = get(attributes, \"preview_image.alt\", \"\");\n                    const fill = liked.find(item => item === id) === id ? `red` : `none`;\n\n                    return (\n                        <div className=\"col-12 col-md-4 mb-3\" key={id}>\n                            <div\n                                className=\"card\"\n                                style={{\n                                    minHeight: \"250px\"\n                                }}\n                            >\n                                <img src={preview_image} className=\"card-img-top\" alt={alt} />\n                                <div className=\"card-body d-flex flex-column justify-content-around align-content-center text-center\">\n                                    <h5\n                                        className=\"card-title\"\n                                        style={{\n                                            minHeight: \"48px\"\n                                        }}\n                                    >\n                                        {title}\n                                    </h5>\n                                    <p\n                                        className=\"card-text\"\n                                        style={{\n                                            minHeight: \"50px\"\n                                       }}\n                                    >\n                                        Адрес: ул.{street},дом.{house}, кв.{room}\n                                    </p>\n                                   <div\n                                       className={\"card__like\"}\n                                       onClick={() => setLike(id)}\n                                   >\n                                       <svg width=\"35\" height=\"35\" xmlns=\"http://www.w3.org/2000/svg\">\n                                           <g>\n                                               <title>Layer 1</title>\n                                               <path id=\"svg_1\" fill={fill} stroke=\"red\" d=\"m16.4,4c-1.8,0 -3.4,0.9 -4.4,2.3c-1,-1.4 -2.6,-2.3 -4.4,-2.3c-3.1,0 -5.6,2.5 -5.6,5.6c0,4.4 10,12.4 10,12.4s10,-8 10,-12.4c0,-3.1 -2.5,-5.6 -5.6,-5.6z\"/>\n                                           </g>\n                                       </svg>\n                                   </div>\n                                </div>\n                            </div>\n                        </div>\n                    )\n                })}\n            </div>\n        </div>\n    )\n};\n","import React from 'react';\nimport Cards from \"./Cards\";\n\nexport default function Main(){\n\n    return (\n        <main className={\"container\"}>\n            <Cards/>\n        </main>\n    )\n};\n","import React from 'react';\nimport Header from \"./components/Header\";\nimport Main from \"./components/Main\";\n\nexport default function App() {\n    return (\n        <>\n            <Header />\n            <Main />\n        </>\n    )\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import 'bootstrap/dist/css/bootstrap.min.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}